// COLORS
$happyButton: #FFC107;
$happyButtonSize: 70px;
$happyButtonShadow: #C2950F;
$happyButtonExpansion: #FFA000;

@mixin transition($transition) {
  -webkit-transition: $transition;
  -moz-transition: $transition;
  -ms-transition: $transition;
  -o-transition: $transition;
  transition: $transition;
}

@mixin expoOut($time: 500) {
  -webkit-transition: all #{$time}ms cubic-bezier(1.000, 0.000, 0.000, 1.000);
  -moz-transition: all #{$time}ms cubic-bezier(1.000, 0.000, 0.000, 1.000);
  -o-transition: all #{$time}ms cubic-bezier(1.000, 0.000, 0.000, 1.000);
  transition: all #{$time}ms cubic-bezier(1.000, 0.000, 0.000, 1.000); /* easeInOutExpo */

  -webkit-transition-timing-function: cubic-bezier(1.000, 0.000, 0.000, 1.000);
  -moz-transition-timing-function: cubic-bezier(1.000, 0.000, 0.000, 1.000);
  -o-transition-timing-function: cubic-bezier(1.000, 0.000, 0.000, 1.000);
  transition-timing-function: cubic-bezier(1.000, 0.000, 0.000, 1.000); /* easeInOutExpo */
}

/* Empty. Add your own CSS if you like */
.fullHeight .scroll,
.fullHeight .fullHeight,
.angular-google-map,
.angular-google-map-container {
  height: 100%;
}

.label-background {
  background-color: $light
}

/** Styling for the username field **/
.item.has-error {
  border-bottom: 2px solid $assertive;
}

/** Styling for the password field when an error exists**/
.item.has-error-lr {
  border-left: 2px solid $assertive;
  border-right: 2px solid $assertive;
}

/** Styling for the password field when an error has been resolved**/
.item.valid-lr {
  border-left: 2px solid $balanced;
  border-right: 2px solid $balanced;
}

/** Styling for the error text and container **/
.form-error {
  color: $assertive;
}

.shape-map {
  background: rgba(#ccc, 0.7);
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 1;
  button {
    @include transition(all .3s);
    width: 100px;
    height: 100px;
    border-radius: 100%;
    border: none;
    position: absolute;
    z-index: 99;
    top: 50%;
    left: 50%;
    margin: -50px;
    color: white;
    padding: 0;

    i.icon {
      width: 100px;
      height: 100px;
      border-radius: 100%;
      display: block;
      padding-top: 25px;
      background: $happyButton;
      box-shadow: 0 0 10px $happyButtonShadow;
      &:before {

        font-size: $happyButtonSize;
      }
    }
    &:before {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      content: ' ';
      height: 100%;
      background-color: $happyButtonExpansion;
      z-index: -1;
      border-radius: 100%;
      //@include expoOut(1500);
      transition: all 1s;
      transform: scale(0.9);
    }
    &:not(.iconGrow_0) {
      background: $happyButton;
      box-shadow: 0 0 0 $happyButtonShadow;
    }

    &.iconGrow_1:before {
      transform: scale(1.5);
    }
    &.iconGrow_2:before {
      transition: all .7s;
      transform: scale(2);
    }
    &.iconGrow_3:before {
      transition: all .5s;
      transform: scale(2.5);
    }
    &.iconGrow_4:before {
      transition: all .3s;
      transform: scale(3);
    }
    &.iconGrow_5:before {
      transition: all .3s;
      transform: scale(15);
    }
  }
}

.meter-zone {
  position: absolute;
  top: 20px;
  height: 50px;
  width: 90%;
  z-index: 999;
  left: 5%;
  opacity: 0;
  transition: all .3s;
  &.visible{
    opacity: 1;
  }
  .meter-icons {
    height: 45px;
    .meter-face {
      width: 20%;
      height: 45px;
      float: left;
      opacity: 0;
      background: blue;
      transition: all .3s;
      &.active {
        opacity: 1;
      }
      span {
        color: white;
        font-size: 30px;
        transform: rotate(90deg);
        display: block;
        width: 100%;
        height: 45px;
        text-align: center;
        line-height: 45px;
      }
    }
  }
  .meter-progress {
    height: 5px;
    background-color: white;
    .meter-bar {
      transition: all .7s;
      height: 5px;
      background-color: green;
    }
  }
}